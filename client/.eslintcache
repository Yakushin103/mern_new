[{"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\index.js":"1","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\App.js":"2","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\reportWebVitals.js":"3","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\routes.js":"4","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\pages\\LinksPage.js":"5","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\pages\\DetailPage.js":"6","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\pages\\CreatePage.js":"7","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\pages\\AuthPage.js":"8","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\hooks\\http.hooks.js":"9","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\hooks\\message.hook.js":"10","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\hooks\\auth.hook.js":"11","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\context\\AuthContext.js":"12","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\Navbar.js":"13","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\Loader.js":"14","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\LinkCard.js":"15","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\Dropdown.js":"16","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ModalCat.js":"17","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ModalAdd.js":"18","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\TimeKeeperAdd.js":"19","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\DateKeeperAdd.js":"20","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\TablesData.js":"21","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ModalInfo.js":"22","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ModalEdit.js":"23","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ChartsList.js":"24","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ModalWarning.js":"25"},{"size":563,"mtime":1606992009280,"results":"26","hashOfConfig":"27"},{"size":829,"mtime":1607350913736,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":981,"mtime":1606410973953,"results":"30","hashOfConfig":"27"},{"size":1051,"mtime":1611777165144,"results":"31","hashOfConfig":"27"},{"size":1062,"mtime":1606429005709,"results":"32","hashOfConfig":"27"},{"size":11245,"mtime":1611738043571,"results":"33","hashOfConfig":"27"},{"size":7590,"mtime":1611925621413,"results":"34","hashOfConfig":"27"},{"size":1038,"mtime":1606416439857,"results":"35","hashOfConfig":"27"},{"size":209,"mtime":1606415979725,"results":"36","hashOfConfig":"27"},{"size":931,"mtime":1606427520049,"results":"37","hashOfConfig":"27"},{"size":212,"mtime":1606418472502,"results":"38","hashOfConfig":"27"},{"size":950,"mtime":1607351082531,"results":"39","hashOfConfig":"27"},{"size":729,"mtime":1606428000916,"results":"40","hashOfConfig":"27"},{"size":594,"mtime":1606459920262,"results":"41","hashOfConfig":"27"},{"size":1405,"mtime":1607189169610,"results":"42","hashOfConfig":"27"},{"size":854,"mtime":1607190499753,"results":"43","hashOfConfig":"27"},{"size":6034,"mtime":1608288087868,"results":"44","hashOfConfig":"27"},{"size":434,"mtime":1608044868719,"results":"45","hashOfConfig":"27"},{"size":522,"mtime":1608046652787,"results":"46","hashOfConfig":"27"},{"size":3347,"mtime":1611651649088,"results":"47","hashOfConfig":"27"},{"size":806,"mtime":1608056853783,"results":"48","hashOfConfig":"27"},{"size":6207,"mtime":1611652109806,"results":"49","hashOfConfig":"27"},{"size":1085,"mtime":1611777184826,"results":"50","hashOfConfig":"27"},{"size":881,"mtime":1611742986988,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"tgn9oq",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\index.js",[],["108","109"],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\App.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\reportWebVitals.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\routes.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\pages\\LinksPage.js",["110","111","112"],"import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport { AuthContext } from '../context/AuthContext.js'\r\nimport { Loader } from '../components/Loader'\r\nimport { ChartsList } from '../components/ChartsList'\r\nimport Chart from 'chart.js'\r\n\r\nexport const LinksPage = () => {\r\n    \r\n    const { loading, request } = useHttp()\r\n    const { token } = useContext(AuthContext)\r\n    const [betsData, setBetsData] = useState([])\r\n\r\n    const fetchData = useCallback(async () => {\r\n        try {\r\n            // const fetchedData = await request('/api/categoryDate/all', 'GET', null, {\r\n            //     Authorization: `Bearer ${token}`\r\n            // })\r\n            // setBetsData(fetchedData)\r\n        } catch (e) { }\r\n    }, [token, request])\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [fetchData])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !loading && <ChartsList betsData={betsData} />}\r\n        </>\r\n    )\r\n}","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\pages\\DetailPage.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\pages\\CreatePage.js",["113","114","115","116","117","118","119","120","121"],"import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useHttp } from '../hooks/http.hooks'\r\nimport { AuthContext } from '../context/AuthContext.js'\r\nimport { format } from 'date-fns'\r\nimport { Button } from 'reactstrap'\r\n\r\nimport { Dropdown } from '../components/Dropdown'\r\nimport { ModalCat } from '../components/ModalCat'\r\nimport { ModalAdd } from '../components/ModalAdd'\r\nimport { ModalEdit } from '../components/ModalEdit'\r\nimport { ModalInfo } from '../components/ModalInfo'\r\nimport { ModalWarning } from '../components/ModalWarning'\r\nimport { TablesData } from '../components/TablesData'\r\nimport { Loader } from '../components/Loader'\r\n\r\n\r\nimport './CreatePage.css'\r\n\r\nexport const CreatePage = () => {\r\n    const { token } = useContext(AuthContext)\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const { request } = useHttp()\r\n    const [options, setOptions] = useState([])\r\n    const [optionsData, setOptionsData] = useState([])\r\n    const [category, setCategory] = useState('')\r\n    const [newCategory, setNewCategory] = useState('')\r\n    const [modal, setModal] = useState(false)\r\n    const [modalWarning, setModalWarning] = useState([false, 0])\r\n    const [modalAdd, setModalAdd] = useState(false)\r\n    const [modalEdit, setModalEdit] = useState(false)\r\n    const [modalInfo, setModalInfo] = useState(false)\r\n    const [removeData, setRemoveData] = useState('')\r\n    const [editData, setEditData] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [formInput, setFormInput] = useState({\r\n        date: new Date(),\r\n        time: format(new Date(), `hh:mmb`),\r\n        bet: '',\r\n        coef: '',\r\n        plus: '',\r\n        sum: ''\r\n    })\r\n\r\n    const toggle = () => setModal(!modal)\r\n    const toggleAdd = () => setModalAdd(!modalAdd)\r\n    const toggleEdit = () => setModalEdit(!modalEdit)\r\n    const toggleInfo = () => setModalInfo(!modalInfo)\r\n    const toggleWarning = () => setModalWarning([!modalWarning, 0])\r\n\r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            const fetched = await request('/api/category/all', 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            setOptions(fetched)\r\n            setLoading(true)\r\n            // const fetchedData = await request('/api/categoryDate/all', 'GET', null, {\r\n            //     Authorization: `Bearer ${token}`\r\n            // })\r\n            // setOptionsData(fetchedData)\r\n            // setLoading(false)\r\n\r\n            const fetchedDataToday = await request(`/api/categoryDate/all/filter?filter=${new Date()}`, 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            setOptionsData(fetchedDataToday)\r\n            setLoading(false)\r\n\r\n        } catch (e) {\r\n            if (e.message === 'Нет авторизации') {\r\n                auth.logout()\r\n                history.push('/')\r\n            }\r\n        }\r\n    }, [token, request])\r\n\r\n    const getAllData = useCallback(async () => {\r\n        // const fetchedData = await request('/api/categoryDate/all', 'GET', null, {\r\n        //     Authorization: `Bearer ${token}`\r\n        // })\r\n        // setOptionsData(fetchedData)\r\n        // setLoading(false)\r\n        const fetchedDataToday = await request(`/api/categoryDate/all/filter?filter=${new Date()}`, 'GET', null, {\r\n            Authorization: `Bearer ${token}`\r\n        })\r\n        setOptionsData(fetchedDataToday)\r\n        setLoading(false)\r\n\r\n        let lastFive = []\r\n        let lastTen = []\r\n\r\n        let lastBet = fetchedDataToday.map((item, i) => {\r\n            if ( i < 5 && item.plus === 'Neg' ) {\r\n                return lastFive.push(item)\r\n            }\r\n            if ( i < 10 && item.plus === 'Neg' ) {\r\n                return lastTen.push(item)\r\n            }\r\n        })\r\n\r\n        if ( lastFive.length === 5 ) {\r\n            setModalWarning([true, 5])\r\n        }\r\n\r\n        if ( lastTen.length === 10 ) {\r\n            setModalWarning([true, 10])\r\n        }\r\n\r\n    }, [token, request])\r\n\r\n    useEffect(() => {\r\n        getLink()\r\n    }, [getLink])\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    const addCategory = async () => {\r\n        if (newCategory !== '') {\r\n            try {\r\n                const data = await request('/api/category/add', 'POST', { name: newCategory }, {\r\n                    Authorization: `Bearer ${auth.token}`\r\n                })\r\n                setCategory(newCategory)\r\n                setNewCategory('')\r\n                getLink()\r\n                toggle()\r\n            } catch (e) { }\r\n        }\r\n    }\r\n\r\n    const cancelAddCategory = () => {\r\n        setNewCategory('')\r\n        toggle()\r\n    }\r\n\r\n    const handleChangeNewData = async () => {\r\n        const categoryId = options.filter(item => item.name === category)\r\n        try {\r\n            const data = await request('/api/categoryDate/add', 'POST', { ...formInput, categoryId: categoryId[0]._id }, {\r\n                Authorization: `Bearer ${auth.token}`\r\n            })\r\n            setModalAdd(!modalAdd)\r\n            setFormInput({\r\n                date: new Date(),\r\n                time: format(new Date(), `hh:mmb`),\r\n                bet: '',\r\n                coef: '',\r\n                plus: '',\r\n                sum: ''\r\n            })\r\n            getAllData()\r\n        } catch (e) { }\r\n    }\r\n\r\n    const handleRemoveData = (id) => {\r\n        setRemoveData(id)\r\n        toggleInfo()\r\n    }\r\n\r\n    const removeDataId = async () => {\r\n        try {\r\n            const data = await request(`/api/categoryDate/delete/${removeData}`, 'DELETE', {\r\n                Authorization: `Bearer ${auth.token}`\r\n            })\r\n            setRemoveData('')\r\n            toggleInfo()\r\n            setLoading(true)\r\n            getAllData()\r\n        } catch (e) { }\r\n    }\r\n\r\n    const handleEditData = (id) => {\r\n        setEditData(id)\r\n        let editData = optionsData.filter((item) => {\r\n            if (item._id === id) {\r\n                setFormInput({\r\n                    date: new Date(),\r\n                    time: item.time,\r\n                    bet: item.bet,\r\n                    coef: item.coef,\r\n                    plus: item.plus,\r\n                    sum: item.sum\r\n                })\r\n            }\r\n        })\r\n        toggleEdit()\r\n    }\r\n\r\n    const editDataId = async () => {\r\n        try {\r\n            const data = await request('/api/categoryDate/edit', 'PUT', { ...formInput, _id: editData }, {\r\n                Authorization: `Bearer ${auth.token}`\r\n            })\r\n            setModalEdit(!modalEdit)\r\n            setFormInput({\r\n                date: new Date(),\r\n                time: format(new Date(), `hh:mmb`),\r\n                bet: '',\r\n                coef: '',\r\n                plus: '',\r\n                sum: ''\r\n            })\r\n            setEditData('')\r\n            getAllData()\r\n        } catch (e) { }\r\n    }\r\n\r\n    const cancelRemoveDataId = () => {\r\n        setRemoveData('')\r\n        toggleInfo()\r\n    }\r\n\r\n    const sumAllData = () => {\r\n        return optionsData.length ? optionsData.reduce((acc, item) => acc + item.sum, 0) : 0\r\n    }\r\n\r\n    return (\r\n        <div className=\"row create-page\">\r\n            <h1>You can win in this game!!!</h1>\r\n            <div className=\"add-data\">\r\n                <div className=\"add-data-item\">\r\n                    <div className=\"input-field col s6\">\r\n                        <Dropdown\r\n                            options={options}\r\n                            category={category}\r\n                            setCategory={setCategory}\r\n                            addCategory={addCategory}\r\n                            modal={modal}\r\n                            setModal={setModal}\r\n                        />\r\n                        <ModalCat\r\n                            modal={modal}\r\n                            toggle={toggle}\r\n                            newCategory={newCategory}\r\n                            setNewCategory={setNewCategory}\r\n                            addCategory={addCategory}\r\n                            cancelAddCategory={cancelAddCategory}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"add-data-item\">\r\n                    <Button\r\n                        style={{ borderRadius: \"50%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\r\n                        onClick={toggleAdd}\r\n                        disabled={category !== \"\" ? false : true}\r\n                    >\r\n                        <i className=\"material-icons\">add</i>\r\n                    </Button>\r\n                    <ModalAdd\r\n                        modal={modalAdd}\r\n                        setModal={setModalAdd}\r\n                        toggle={toggleAdd}\r\n                        handleChangeNewData={handleChangeNewData}\r\n                        formInput={formInput}\r\n                        setFormInput={setFormInput}\r\n                    />\r\n                    <ModalEdit\r\n                        modal={modalEdit}\r\n                        setModal={setModalEdit}\r\n                        toggle={toggleEdit}\r\n                        saveEditData={editDataId}\r\n                        formInput={formInput}\r\n                        setFormInput={setFormInput}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"add-data-result\">\r\n                <span\r\n                    style={{ color: sumAllData().toFixed(2) > 0 ? 'green' : '#dc3545', fontWeight: 'bold' }}\r\n                >\r\n                    {\r\n                        optionsData.length &&\r\n                        sumAllData().toFixed(2)\r\n                    }\r\n                </span>\r\n            </div>\r\n            <div className=\"add-data-result\" style={{ width: '50%' }}>\r\n                <span\r\n                    style={{ color: sumAllData().toFixed(2) > 0 ? 'green' : '#dc3545', fontWeight: 'bold' }}\r\n                >\r\n                    {\r\n                        sumAllData().toFixed(2) > 0 ?\r\n                            'Its a good result, but you can more and better' :\r\n                            'You need more concentration and fewer bets'\r\n                    }\r\n                </span>\r\n            </div>\r\n            <div className=\"add-data-tables\">\r\n                {\r\n                    loading ?\r\n                        <Loader />\r\n                        :\r\n                        <TablesData\r\n                            optionsData={optionsData}\r\n                            handleRemoveData={handleRemoveData}\r\n                            handleEditData={handleEditData}\r\n                        />\r\n                }\r\n                <ModalInfo\r\n                    modal={modalInfo}\r\n                    toggle={toggleInfo}\r\n                    removeDataId={removeDataId}\r\n                    cancelRemoveDataId={cancelRemoveDataId}\r\n                />\r\n                <ModalWarning\r\n                    modal={modalWarning}\r\n                    toggle={toggleWarning}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\pages\\AuthPage.js",["122"],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\hooks\\http.hooks.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\hooks\\message.hook.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\hooks\\auth.hook.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\Navbar.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\Loader.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\LinkCard.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\Dropdown.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ModalCat.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ModalAdd.js",["123"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n\r\nimport { DateKeeperAdd } from './DateKeeperAdd'\r\nimport { TimeKeeperAdd } from './TimeKeeperAdd'\r\n\r\nexport const ModalAdd = ({ modal, toggle, formInput, setFormInput, handleChangeNewData }) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false)\r\n    const [showTime, setShowTime] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (formInput.bet !== '' && formInput.coef !== '') {\r\n            if (formInput.plus !== '') {\r\n                let sum = (formInput.bet * formInput.coef) - formInput.bet\r\n                let sumVal = formInput.plus === 'Pos' ? sum : formInput.plus === 'Neg' ? -formInput.bet : 0\r\n                setFormInput({\r\n                    ...formInput,\r\n                    sum: sumVal.toFixed(2)\r\n                })\r\n            }\r\n        } else {\r\n            setFormInput({\r\n                ...formInput,\r\n                sum: ''\r\n            })\r\n        }\r\n    }, [formInput.bet, formInput.coef, formInput.plus])\r\n\r\n    const changeInput = (name, value) => {\r\n        setFormInput({\r\n            ...formInput,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const toggleDropdown = () => setDropdownOpen(prevState => !prevState)\r\n\r\n    const ValidForm = () => {\r\n        let DateValid = formInput.date !== ''\r\n        let TimeValid = formInput.time !== ''\r\n        let BetValid = formInput.bet !== ''\r\n        let CoefValid = formInput.coef !== ''\r\n        let PlusValid = formInput.plus !== ''\r\n\r\n        return DateValid && TimeValid && BetValid && CoefValid && PlusValid\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: \"80%\" }} >\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Add new data</ModalHeader>\r\n                <ModalBody className=\"text-center\" >\r\n                    <Row>\r\n                        <Col xs=\"6\" >\r\n                            <DateKeeperAdd\r\n                                startDate={formInput}\r\n                                setStartDate={setFormInput}\r\n                            />\r\n                            <span>\r\n                            </span>\r\n                        </Col>\r\n                        <Col xs=\"6\" >\r\n                            {\r\n                                showTime &&\r\n                                <TimeKeeperAdd\r\n                                    time={formInput.Time}\r\n                                    setTime={(time) => setFormInput({\r\n                                        ...formInput,\r\n                                        \"time\": time\r\n                                    })}\r\n                                    showTime={showTime}\r\n                                    setShowTime={setShowTime}\r\n                                />\r\n                            }\r\n                            {!showTime &&\r\n                                <Button onClick={() => setShowTime(true)}>{formInput.time}</Button>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs=\"6\" >\r\n                            <Input\r\n                                name=\"bet\"\r\n                                value={formInput.bet}\r\n                                placeholder=\"bet\"\r\n                                onChange={(e) => changeInput(e.target.name, e.target.value)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs=\"6\" >\r\n                            <Input\r\n                                name=\"coef\"\r\n                                value={formInput.coef}\r\n                                placeholder=\"coef\"\r\n                                onChange={(e) => changeInput(e.target.name, e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm={{ size: 6, offset: 6 }} >\r\n                            <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\r\n                                <DropdownToggle caret>\r\n                                    {\r\n                                        formInput.plus === \"\" ? \"Choose Pos/Neg\" : formInput.plus\r\n                                    }\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    <DropdownItem\r\n                                        onClick={() => changeInput(\"plus\", \"Pos\")}\r\n                                    >\r\n                                        Pos\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                        onClick={() => changeInput(\"plus\", \"Smo\")}\r\n                                    >\r\n                                        Smo\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                        onClick={() => changeInput(\"plus\", \"Neg\")}\r\n                                    >\r\n                                        Neg\r\n                                    </DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{ marginTop: \"5rem\" }} >\r\n                        <Col sm={{ size: 2, offset: 6 }} >Sum: {formInput.sum}</Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button disabled={!ValidForm()} style={{ marginRight: '1rem' }} color=\"primary\" onClick={handleChangeNewData}>Save</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\TimeKeeperAdd.js",[],["124","125"],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\DateKeeperAdd.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\TablesData.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ModalInfo.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ModalEdit.js",["126"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col, Input, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n\r\nimport { DateKeeperAdd } from './DateKeeperAdd'\r\nimport { TimeKeeperAdd } from './TimeKeeperAdd'\r\n\r\nexport const ModalEdit = ({ modal, toggle, formInput, setFormInput, saveEditData }) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false)\r\n    const [showTime, setShowTime] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (formInput.bet !== '' && formInput.coef !== '') {\r\n            if (formInput.plus !== '') {\r\n                let sum = (formInput.bet * formInput.coef) - formInput.bet\r\n                let sumVal = formInput.plus === 'Pos' ? sum : formInput.plus === 'Neg' ? -formInput.bet : 0\r\n                setFormInput({\r\n                    ...formInput,\r\n                    sum: sumVal.toFixed(2)\r\n                })\r\n            }\r\n        } else {\r\n            setFormInput({\r\n                ...formInput,\r\n                sum: ''\r\n            })\r\n        }\r\n    }, [formInput.bet, formInput.coef, formInput.plus])\r\n\r\n    const changeInput = (name, value) => {\r\n        setFormInput({\r\n            ...formInput,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const toggleDropdown = () => setDropdownOpen(prevState => !prevState)\r\n\r\n    const ValidForm = () => {\r\n        let DateValid = formInput.date !== ''\r\n        let TimeValid = formInput.time !== ''\r\n        let BetValid = formInput.bet !== ''\r\n        let CoefValid = formInput.coef !== ''\r\n        let PlusValid = formInput.plus !== ''\r\n\r\n        return DateValid && TimeValid && BetValid && CoefValid && PlusValid\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: \"80%\" }} >\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>Edit data</ModalHeader>\r\n                <ModalBody className=\"text-center\" >\r\n                    <Row>\r\n                        <Col xs=\"6\" >\r\n                            <DateKeeperAdd\r\n                                startDate={formInput}\r\n                                setStartDate={setFormInput}\r\n                            />\r\n                            <span>\r\n                                {/* {formInput.date} */}\r\n                            </span>\r\n                        </Col>\r\n                        <Col xs=\"6\" >\r\n                            <span>\r\n                                {/* {formInput.date} */}\r\n                            </span>\r\n                            {\r\n                                showTime &&\r\n                                <TimeKeeperAdd\r\n                                    time={formInput.Time}\r\n                                    setTime={(time) => setFormInput({\r\n                                        ...formInput,\r\n                                        \"time\": time\r\n                                    })}\r\n                                    showTime={showTime}\r\n                                    setShowTime={setShowTime}\r\n                                />\r\n                            }\r\n                            {!showTime &&\r\n                                <Button onClick={() => setShowTime(true)}>{formInput.time}</Button>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs=\"6\" >\r\n                            <Input\r\n                                name=\"bet\"\r\n                                value={formInput.bet}\r\n                                placeholder=\"bet\"\r\n                                onChange={(e) => changeInput(e.target.name, e.target.value)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs=\"6\" >\r\n                            <Input\r\n                                name=\"coef\"\r\n                                value={formInput.coef}\r\n                                placeholder=\"coef\"\r\n                                onChange={(e) => changeInput(e.target.name, e.target.value)}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm={{ size: 6, offset: 6 }} >\r\n                            <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\r\n                                <DropdownToggle caret>\r\n                                    {\r\n                                        formInput.plus === \"\" ? \"Choose Pos/Neg\" : formInput.plus\r\n                                    }\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    <DropdownItem\r\n                                        onClick={() => changeInput(\"plus\", \"Pos\")}\r\n                                    >\r\n                                        Pos\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                        onClick={() => changeInput(\"plus\", \"Smo\")}\r\n                                    >\r\n                                        Smo\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                        onClick={() => changeInput(\"plus\", \"Neg\")}\r\n                                    >\r\n                                        Neg\r\n                                    </DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{ marginTop: \"5rem\" }} >\r\n                        <Col sm={{ size: 2, offset: 6 }} >Sum: {formInput.sum}</Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button disabled={!ValidForm()} style={{ marginRight: '1rem' }} color=\"primary\" onClick={saveEditData}>Save</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ChartsList.js",[],"C:\\Users\\79888\\Desktop\\work\\MERN\\client\\src\\components\\ModalWarning.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":13},{"ruleId":"131","severity":1,"message":"135","line":12,"column":22,"nodeType":"133","messageId":"134","endLine":12,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":21,"column":8,"nodeType":"138","endLine":21,"endColumn":24,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":77,"column":8,"nodeType":"138","endLine":77,"endColumn":24,"suggestions":"141"},{"ruleId":"131","severity":1,"message":"142","line":94,"column":13,"nodeType":"133","messageId":"134","endLine":94,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":94,"column":54,"nodeType":"145","messageId":"146","endLine":94,"endColumn":56},{"ruleId":"131","severity":1,"message":"147","line":124,"column":23,"nodeType":"133","messageId":"134","endLine":124,"endColumn":27},{"ruleId":"131","severity":1,"message":"147","line":143,"column":19,"nodeType":"133","messageId":"134","endLine":143,"endColumn":23},{"ruleId":"131","severity":1,"message":"147","line":166,"column":19,"nodeType":"133","messageId":"134","endLine":166,"endColumn":23},{"ruleId":"131","severity":1,"message":"148","line":178,"column":13,"nodeType":"133","messageId":"134","endLine":178,"endColumn":21},{"ruleId":"143","severity":1,"message":"149","line":178,"column":50,"nodeType":"145","messageId":"150","endLine":178,"endColumn":52},{"ruleId":"131","severity":1,"message":"147","line":195,"column":19,"nodeType":"133","messageId":"134","endLine":195,"endColumn":23},{"ruleId":"131","severity":1,"message":"151","line":11,"column":13,"nodeType":"133","messageId":"134","endLine":11,"endColumn":20},{"ruleId":"136","severity":1,"message":"152","line":27,"column":8,"nodeType":"138","endLine":27,"endColumn":55,"suggestions":"153"},{"ruleId":"127","replacedBy":"154"},{"ruleId":"129","replacedBy":"155"},{"ruleId":"136","severity":1,"message":"152","line":27,"column":8,"nodeType":"138","endLine":27,"endColumn":55,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","'setBetsData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has unnecessary dependencies: 'request' and 'token'. Either exclude them or remove the dependency array.","ArrayExpression",["159"],"React Hook useCallback has missing dependencies: 'auth' and 'history'. Either include them or remove the dependency array.",["160"],"'lastBet' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'data' is assigned a value but never used.","'editData' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","expectedInside","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formInput' and 'setFormInput'. Either include them or remove the dependency array. If 'setFormInput' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["161"],["157"],["158"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},"Update the dependencies array to be: []",{"range":"170","text":"171"},"Update the dependencies array to be: [request, token, auth, history]",{"range":"172","text":"173"},"Update the dependencies array to be: [formInput, formInput.bet, formInput.coef, formInput.plus, setFormInput]",{"range":"174","text":"175"},{"range":"176","text":"175"},[797,813],"[]",[3021,3037],"[request, token, auth, history]",[1112,1159],"[formInput, formInput.bet, formInput.coef, formInput.plus, setFormInput]",[1106,1153]]